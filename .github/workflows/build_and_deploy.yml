name: Local EWS Naxa CICD

on:
  push:
    branches:
      - 'master'
  workflow_dispatch:

env:
  AUTHOR: naxa
  AWS_REGION: ap-south-1

jobs:
  build:
    name: Build Static Files
    runs-on: self-hosted
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Use Node.js 18.x
        uses: actions/setup-node@v1
        with:
          node-version: 18.x

      - name: Install yarn
        run: npm install -g yarn

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Write Environment Variables
        id: write_env
        run: |
          case "${{ github.ref }}" in
          refs/heads/develop)
          echo '
          # Write Development Environment Variables
          ' > .env
          ;;
          refs/heads/staging)
          echo '
          # Write Staging Environment Variables
          ' > .env
          ;;
          refs/heads/master)
          echo '
          # Write Production Environment Variables
          API_URL=https://localews.naxa.com.np/api/v1
          HWCW_URL=https://hwcw.naxa.com.np/api/v1/ews
          MUNICIPALITY_CODE=328
          DISTRICT_CODE=30
          MUNICIPALITY_BOUND="84.8133059999999972, 27.8410019999999996, 85.0165269999999964, 27.9964900000000014"
          DISTRICT_BOUND="84.6184140000000298, 27.6683640000000217, 85.2703260000000398, 28.3461770000000044"
          COUNTRY_BOUND="80.0587610000000183, 26.3474370000000278, 88.2017000000000451, 30.4726766662497859"
          NODE_ENV=production
          ' > .env
          ;;
          esac

      - name: Install dependencies
        run: yarn install

      - name: Generate build
        run: |
          yarn build
        env:
          NODE_OPTIONS: '--max_old_space_size=8192'

      - name: Upload Dist as Artifacts
        uses: actions/upload-artifact@v3
        if: ${{ github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'  }}
        with:
          name: ${{ github.event.repository.name }}-${{ github.ref_name }}
          path: dist
          retention-days: 1

      - name: Clean up Yarn
        if: always()
        run: npm uninstall -g yarn

  deploy:
    name: Deploy static files
    needs:
      - build
    if: ${{ github.ref == 'refs/heads/master'  }}
    runs-on: self-hosted
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Get Artifacts
        uses: actions/download-artifact@v1
        with:
          path: dist
          name: ${{ github.event.repository.name }}-${{ github.ref_name }}

      - name: Get VM SSH host and user
        id: get_vm_conf
        run: |
          case "${{ github.ref }}" in
          refs/heads/master)
              export SERVER_IP=167.71.229.214
              export SERVER_USERNAME=devops
              export PROJECT_PATH=/srv/Projects/local-anticipation/dist
              ;;      
          esac
          echo "SERVER_IP=${SERVER_IP}" >> $GITHUB_OUTPUT
          echo "SERVER_USERNAME=${SERVER_USERNAME}" >> $GITHUB_OUTPUT
          echo "PROJECT_PATH=${PROJECT_PATH}" >> $GITHUB_OUTPUT

      - name: Configure SSH key
        run: |
          mkdir -p ~/.ssh
          touch ~/.ssh/id_rsa
          chmod 666 ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa
          ssh-keyscan ${{ steps.get_vm_conf.outputs.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: copy static files
        run: |
          scp -r ./dist/* ${{ steps.get_vm_conf.outputs.SERVER_USERNAME }}@${{ steps.get_vm_conf.outputs.SERVER_IP }}:${{ steps.get_vm_conf.outputs.PROJECT_PATH }}
          echo "Build Pass"
